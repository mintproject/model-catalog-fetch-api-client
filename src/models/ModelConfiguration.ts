// tslint:disable
/**
 * Model Catalog
 * This is the API of the Software Description Ontology at [https://w3id.org/okn/o/sdm](https://w3id.org/okn/o/sdm)
 *
 * The version of the OpenAPI document: v1.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CausalDiagram,
    CausalDiagramFromJSON,
    CausalDiagramFromJSONTyped,
    CausalDiagramToJSON,
    ConfigurationSetup,
    ConfigurationSetupFromJSON,
    ConfigurationSetupFromJSONTyped,
    ConfigurationSetupToJSON,
    Constraint,
    ConstraintFromJSON,
    ConstraintFromJSONTyped,
    ConstraintToJSON,
    DatasetSpecification,
    DatasetSpecificationFromJSON,
    DatasetSpecificationFromJSONTyped,
    DatasetSpecificationToJSON,
    Equation,
    EquationFromJSON,
    EquationFromJSONTyped,
    EquationToJSON,
    FundingInformation,
    FundingInformationFromJSON,
    FundingInformationFromJSONTyped,
    FundingInformationToJSON,
    Grid,
    GridFromJSON,
    GridFromJSONTyped,
    GridToJSON,
    Image,
    ImageFromJSON,
    ImageFromJSONTyped,
    ImageToJSON,
    ModelCategory,
    ModelCategoryFromJSON,
    ModelCategoryFromJSONTyped,
    ModelCategoryToJSON,
    NumericalIndex,
    NumericalIndexFromJSON,
    NumericalIndexFromJSONTyped,
    NumericalIndexToJSON,
    Organization,
    Parameter,
    ParameterFromJSON,
    ParameterFromJSONTyped,
    ParameterToJSON,
    Person,
    PersonFromJSON,
    PersonFromJSONTyped,
    PersonToJSON,
    Process,
    ProcessFromJSON,
    ProcessFromJSONTyped,
    ProcessToJSON,
    Region,
    RegionFromJSON,
    RegionFromJSONTyped,
    RegionToJSON,
    SampleExecution,
    SampleExecutionFromJSON,
    SampleExecutionFromJSONTyped,
    SampleExecutionToJSON,
    SampleResource,
    SampleResourceFromJSON,
    SampleResourceFromJSONTyped,
    SampleResourceToJSON,
    Software,
    SoftwareFromJSON,
    SoftwareFromJSONTyped,
    SoftwareToJSON,
    SoftwareImage,
    SoftwareImageFromJSON,
    SoftwareImageFromJSONTyped,
    SoftwareImageToJSON,
    SoftwareVersion,
    SoftwareVersionFromJSON,
    SoftwareVersionFromJSONTyped,
    SoftwareVersionToJSON,
    SourceCode,
    SourceCodeFromJSON,
    SourceCodeFromJSONTyped,
    SourceCodeToJSON,
    TimeInterval,
    TimeIntervalFromJSON,
    TimeIntervalFromJSONTyped,
    TimeIntervalToJSON,
    VariablePresentation,
    VariablePresentationFromJSON,
    VariablePresentationFromJSONTyped,
    VariablePresentationToJSON,
    Visualization,
    VisualizationFromJSON,
    VisualizationFromJSONTyped,
    VisualizationToJSON,
} from './';

/**
 * A model configuration is a way of exposing a particular functionality of a model.
 * @export
 * @interface ModelConfiguration
 */
export interface ModelConfiguration {
    /**
     * Description not available
     * @type {Array<string>}
     * @memberof ModelConfiguration
     */
    hasDownloadInstructions?: Array<string> | null;
    /**
     * Description not available
     * @type {Array<string>}
     * @memberof ModelConfiguration
     */
    keywords?: Array<string> | null;
    /**
     * Description not available
     * @type {Array<string>}
     * @memberof ModelConfiguration
     */
    hasDocumentation?: Array<string> | null;
    /**
     * Grid information about the model
     * @type {Array<Grid>}
     * @memberof ModelConfiguration
     */
    hasGrid?: Array<Grid> | null;
    /**
     * Description not available
     * @type {Array<string>}
     * @memberof ModelConfiguration
     */
    hasImplementationScriptLocation?: Array<string> | null;
    /**
     * Description not available
     * @type {Array<string>}
     * @memberof ModelConfiguration
     */
    softwareRequirements?: Array<string> | null;
    /**
     * Description not available
     * @type {Array<string>}
     * @memberof ModelConfiguration
     */
    hasDownloadURL?: Array<string> | null;
    /**
     * type of the resource
     * @type {Array<string>}
     * @memberof ModelConfiguration
     */
    type?: Array<string> | null;
    /**
     * Description not available
     * @type {Array<string>}
     * @memberof ModelConfiguration
     */
    hasInstallationInstructions?: Array<string> | null;
    /**
     * Description not available
     * @type {Array<Software>}
     * @memberof ModelConfiguration
     */
    compatibleVisualizationSoftware?: Array<Software> | null;
    /**
     * Description not available
     * @type {Array<Organization | Person>}
     * @memberof ModelConfiguration
     */
    copyrightHolder?: Array<Organization | Person> | null;
    /**
     * Property linking a region to a model configuration/calibration. This property implies that the described model configuration is prepared to execute in that target region
     * @type {Array<Region>}
     * @memberof ModelConfiguration
     */
    hasRegion?: Array<Region> | null;
    /**
     * Description not available
     * @type {Array<string>}
     * @memberof ModelConfiguration
     */
    hasFAQ?: Array<string> | null;
    /**
     * Description not available
     * @type {Array<Image>}
     * @memberof ModelConfiguration
     */
    logo?: Array<Image> | null;
    /**
     * Description not available
     * @type {Array<Organization | Person>}
     * @memberof ModelConfiguration
     */
    hasContactPerson?: Array<Organization | Person> | null;
    /**
     * Description not available
     * @type {Array<string>}
     * @memberof ModelConfiguration
     */
    tag?: Array<string> | null;
    /**
     * identifier
     * @type {string}
     * @memberof ModelConfiguration
     */
    id?: string;
    /**
     * Known restrictions (i.e. cases where the model is known not to be reliable or shouldn\'t be used)
     * @type {Array<string>}
     * @memberof ModelConfiguration
     */
    limitations?: Array<string> | null;
    /**
     * Description not available
     * @type {Array<string>}
     * @memberof ModelConfiguration
     */
    identifier?: Array<string> | null;
    /**
     * Description not available
     * @type {Array<SampleExecution>}
     * @memberof ModelConfiguration
     */
    hasSampleExecution?: Array<SampleExecution> | null;
    /**
     * Description not available
     * @type {Array<SampleResource>}
     * @memberof ModelConfiguration
     */
    hasSampleResult?: Array<SampleResource> | null;
    /**
     * Description not available
     * @type {Array<Organization | Person>}
     * @memberof ModelConfiguration
     */
    author?: Array<Organization | Person> | null;
    /**
     * Description not available
     * @type {Array<Constraint>}
     * @memberof ModelConfiguration
     */
    hasConstraint?: Array<Constraint> | null;
    /**
     * Description not available
     * @type {Array<string>}
     * @memberof ModelConfiguration
     */
    hasBuildFile?: Array<string> | null;
    /**
     * Description not available
     * @type {Array<string>}
     * @memberof ModelConfiguration
     */
    shortDescription?: Array<string> | null;
    /**
     * Description not available
     * @type {Array<string>}
     * @memberof ModelConfiguration
     */
    hasExecutionCommand?: Array<string> | null;
    /**
     * Description not available
     * @type {Array<string>}
     * @memberof ModelConfiguration
     */
    datePublished?: Array<string> | null;
    /**
     * What is the theory behind the processes described in the model
     * @type {Array<string>}
     * @memberof ModelConfiguration
     */
    theoreticalBasis?: Array<string> | null;
    /**
     * Description not available
     * @type {Array<string>}
     * @memberof ModelConfiguration
     */
    license?: Array<string> | null;
    /**
     * Description not available
     * @type {Array<SourceCode>}
     * @memberof ModelConfiguration
     */
    hasSourceCode?: Array<SourceCode> | null;
    /**
     * Description not available
     * @type {Array<ConfigurationSetup>}
     * @memberof ModelConfiguration
     */
    hasSetup?: Array<ConfigurationSetup> | null;
    /**
     * Diagram used to explain the behavior of the model
     * @type {Array<Image>}
     * @memberof ModelConfiguration
     */
    hasExplanationDiagram?: Array<Image> | null;
    /**
     * Description not available
     * @type {Array<string>}
     * @memberof ModelConfiguration
     */
    hasExample?: Array<string> | null;
    /**
     * Description not available
     * @type {Array<Organization | Person>}
     * @memberof ModelConfiguration
     */
    publisher?: Array<Organization | Person> | null;
    /**
     * Description not available
     * @type {Array<DatasetSpecification>}
     * @memberof ModelConfiguration
     */
    hasOutput?: Array<DatasetSpecification> | null;
    /**
     * An estimate of the time required to run example codes or other known configurations
     * @type {Array<string>}
     * @memberof ModelConfiguration
     */
    runtimeEstimation?: Array<string> | null;
    /**
     * Time interval used in the model configuration
     * @type {Array<TimeInterval>}
     * @memberof ModelConfiguration
     */
    hasOutputTimeInterval?: Array<TimeInterval> | null;
    /**
     * Description not available
     * @type {Array<string>}
     * @memberof ModelConfiguration
     */
    doi?: Array<string> | null;
    /**
     * Description not available
     * @type {Array<FundingInformation>}
     * @memberof ModelConfiguration
     */
    hasFunding?: Array<FundingInformation> | null;
    /**
     * Description not available
     * @type {Array<string>}
     * @memberof ModelConfiguration
     */
    hasComponentLocation?: Array<string> | null;
    /**
     * Property that indicates which physical processes (if any) are associated with a model
     * @type {Array<Process>}
     * @memberof ModelConfiguration
     */
    hasProcess?: Array<Process> | null;
    /**
     * Description not available
     * @type {Array<string>}
     * @memberof ModelConfiguration
     */
    supportDetails?: Array<string> | null;
    /**
     * Description not available
     * @type {Array<SoftwareVersion>}
     * @memberof ModelConfiguration
     */
    hasVersion?: Array<SoftwareVersion> | null;
    /**
     * Description not available
     * @type {Array<string>}
     * @memberof ModelConfiguration
     */
    hasTypicalDataSource?: Array<string> | null;
    /**
     * small description
     * @type {Array<string>}
     * @memberof ModelConfiguration
     */
    description?: Array<string> | null;
    /**
     * Description not available
     * @type {Array<string>}
     * @memberof ModelConfiguration
     */
    referencePublication?: Array<string> | null;
    /**
     * Description not available
     * @type {Array<Image>}
     * @memberof ModelConfiguration
     */
    screenshot?: Array<Image> | null;
    /**
     * Category associated with a model (e.g., Hydrology, etc.)
     * @type {Array<ModelCategory>}
     * @memberof ModelConfiguration
     */
    hasModelCategory?: Array<ModelCategory> | null;
    /**
     * Description not available
     * @type {Array<object>}
     * @memberof ModelConfiguration
     */
    hadPrimarySource?: Array<object> | null;
    /**
     * Description not available
     * @type {Array<string>}
     * @memberof ModelConfiguration
     */
    issueTracker?: Array<string> | null;
    /**
     * Description not available
     * @type {Array<SoftwareImage>}
     * @memberof ModelConfiguration
     */
    hasSoftwareImage?: Array<SoftwareImage> | null;
    /**
     * Description not available
     * @type {Array<string>}
     * @memberof ModelConfiguration
     */
    dateCreated?: Array<string> | null;
    /**
     * Description not available
     * @type {Array<Person>}
     * @memberof ModelConfiguration
     */
    contributor?: Array<Person> | null;
    /**
     * Variable that is used as input for this model
     * @type {Array<VariablePresentation>}
     * @memberof ModelConfiguration
     */
    hasInputVariable?: Array<VariablePresentation> | null;
    /**
     * Sample result table associated with a model configuration
     * @type {Array<string>}
     * @memberof ModelConfiguration
     */
    hasModelResultTable?: Array<string> | null;
    /**
     * Description not available
     * @type {Array<string>}
     * @memberof ModelConfiguration
     */
    hasPurpose?: Array<string> | null;
    /**
     * Description not available
     * @type {Array<string>}
     * @memberof ModelConfiguration
     */
    hasExecutableInstructions?: Array<string> | null;
    /**
     * Description not available
     * @type {Array<Visualization>}
     * @memberof ModelConfiguration
     */
    hasSampleVisualization?: Array<Visualization> | null;
    /**
     * Diagram associated to a model configuration
     * @type {Array<CausalDiagram>}
     * @memberof ModelConfiguration
     */
    hasCausalDiagram?: Array<CausalDiagram> | null;
    /**
     * Description not available
     * @type {Array<string>}
     * @memberof ModelConfiguration
     */
    memoryRequirements?: Array<string> | null;
    /**
     * Description not available
     * @type {Array<string>}
     * @memberof ModelConfiguration
     */
    website?: Array<string> | null;
    /**
     * Description not available
     * @type {Array<string>}
     * @memberof ModelConfiguration
     */
    citation?: Array<string> | null;
    /**
     * Description not available
     * @type {Array<string>}
     * @memberof ModelConfiguration
     */
    processorRequirements?: Array<string> | null;
    /**
     * Were there any simplifications made to processes to make the model more efficient
     * @type {Array<string>}
     * @memberof ModelConfiguration
     */
    parameterization?: Array<string> | null;
    /**
     * Description not available
     * @type {Array<string>}
     * @memberof ModelConfiguration
     */
    hasUsageNotes?: Array<string> | null;
    /**
     * Description not available
     * @type {Array<string>}
     * @memberof ModelConfiguration
     */
    hasSupportScriptLocation?: Array<string> | null;
    /**
     * Description not available
     * @type {Array<string>}
     * @memberof ModelConfiguration
     */
    readme?: Array<string> | null;
    /**
     * short description of the resource
     * @type {Array<string>}
     * @memberof ModelConfiguration
     */
    label?: Array<string> | null;
    /**
     * Description not available
     * @type {Array<string>}
     * @memberof ModelConfiguration
     */
    hasAssumption?: Array<string> | null;
    /**
     * Description not available
     * @type {Array<Parameter>}
     * @memberof ModelConfiguration
     */
    hasParameter?: Array<Parameter> | null;
    /**
     * Description not available
     * @type {Array<string>}
     * @memberof ModelConfiguration
     */
    operatingSystems?: Array<string> | null;
    /**
     * Description not available
     * @type {Array<string>}
     * @memberof ModelConfiguration
     */
    hasExecutableNotebook?: Array<string> | null;
    /**
     * Equations used in the model
     * @type {Array<Equation>}
     * @memberof ModelConfiguration
     */
    hasEquation?: Array<Equation> | null;
    /**
     * Description not available
     * @type {Array<NumericalIndex>}
     * @memberof ModelConfiguration
     */
    usefulForCalculatingIndex?: Array<NumericalIndex> | null;
    /**
     * Description not available
     * @type {Array<DatasetSpecification>}
     * @memberof ModelConfiguration
     */
    hasInput?: Array<DatasetSpecification> | null;
    /**
     * Variable that is used as output for this model
     * @type {Array<VariablePresentation>}
     * @memberof ModelConfiguration
     */
    hasOutputVariable?: Array<VariablePresentation> | null;
}

export function ModelConfigurationFromJSON(json: any): ModelConfiguration {
    return ModelConfigurationFromJSONTyped(json, false);
}

export function ModelConfigurationFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelConfiguration {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hasDownloadInstructions': !exists(json, 'hasDownloadInstructions') ? undefined : json['hasDownloadInstructions'],
        'keywords': !exists(json, 'keywords') ? undefined : json['keywords'],
        'hasDocumentation': !exists(json, 'hasDocumentation') ? undefined : json['hasDocumentation'],
        'hasGrid': !exists(json, 'hasGrid') ? undefined : (json['hasGrid'] as Array<any>).map(GridFromJSON),
        'hasImplementationScriptLocation': !exists(json, 'hasImplementationScriptLocation') ? undefined : json['hasImplementationScriptLocation'],
        'softwareRequirements': !exists(json, 'softwareRequirements') ? undefined : json['softwareRequirements'],
        'hasDownloadURL': !exists(json, 'hasDownloadURL') ? undefined : json['hasDownloadURL'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'hasInstallationInstructions': !exists(json, 'hasInstallationInstructions') ? undefined : json['hasInstallationInstructions'],
        'compatibleVisualizationSoftware': !exists(json, 'compatibleVisualizationSoftware') ? undefined : (json['compatibleVisualizationSoftware'] as Array<any>).map(SoftwareFromJSON),
        'copyrightHolder': !exists(json, 'copyrightHolder') ? undefined : json['copyrightHolder'],
        'hasRegion': !exists(json, 'hasRegion') ? undefined : (json['hasRegion'] as Array<any>).map(RegionFromJSON),
        'hasFAQ': !exists(json, 'hasFAQ') ? undefined : json['hasFAQ'],
        'logo': !exists(json, 'logo') ? undefined : (json['logo'] as Array<any>).map(ImageFromJSON),
        'hasContactPerson': !exists(json, 'hasContactPerson') ? undefined : json['hasContactPerson'],
        'tag': !exists(json, 'tag') ? undefined : json['tag'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'limitations': !exists(json, 'limitations') ? undefined : json['limitations'],
        'identifier': !exists(json, 'identifier') ? undefined : json['identifier'],
        'hasSampleExecution': !exists(json, 'hasSampleExecution') ? undefined : (json['hasSampleExecution'] as Array<any>).map(SampleExecutionFromJSON),
        'hasSampleResult': !exists(json, 'hasSampleResult') ? undefined : (json['hasSampleResult'] as Array<any>).map(SampleResourceFromJSON),
        'author': !exists(json, 'author') ? undefined : json['author'],
        'hasConstraint': !exists(json, 'hasConstraint') ? undefined : (json['hasConstraint'] as Array<any>).map(ConstraintFromJSON),
        'hasBuildFile': !exists(json, 'hasBuildFile') ? undefined : json['hasBuildFile'],
        'shortDescription': !exists(json, 'shortDescription') ? undefined : json['shortDescription'],
        'hasExecutionCommand': !exists(json, 'hasExecutionCommand') ? undefined : json['hasExecutionCommand'],
        'datePublished': !exists(json, 'datePublished') ? undefined : json['datePublished'],
        'theoreticalBasis': !exists(json, 'theoreticalBasis') ? undefined : json['theoreticalBasis'],
        'license': !exists(json, 'license') ? undefined : json['license'],
        'hasSourceCode': !exists(json, 'hasSourceCode') ? undefined : (json['hasSourceCode'] as Array<any>).map(SourceCodeFromJSON),
        'hasSetup': !exists(json, 'hasSetup') ? undefined : (json['hasSetup'] as Array<any>).map(ConfigurationSetupFromJSON),
        'hasExplanationDiagram': !exists(json, 'hasExplanationDiagram') ? undefined : (json['hasExplanationDiagram'] as Array<any>).map(ImageFromJSON),
        'hasExample': !exists(json, 'hasExample') ? undefined : json['hasExample'],
        'publisher': !exists(json, 'publisher') ? undefined : json['publisher'],
        'hasOutput': !exists(json, 'hasOutput') ? undefined : (json['hasOutput'] as Array<any>).map(DatasetSpecificationFromJSON),
        'runtimeEstimation': !exists(json, 'runtimeEstimation') ? undefined : json['runtimeEstimation'],
        'hasOutputTimeInterval': !exists(json, 'hasOutputTimeInterval') ? undefined : (json['hasOutputTimeInterval'] as Array<any>).map(TimeIntervalFromJSON),
        'doi': !exists(json, 'doi') ? undefined : json['doi'],
        'hasFunding': !exists(json, 'hasFunding') ? undefined : (json['hasFunding'] as Array<any>).map(FundingInformationFromJSON),
        'hasComponentLocation': !exists(json, 'hasComponentLocation') ? undefined : json['hasComponentLocation'],
        'hasProcess': !exists(json, 'hasProcess') ? undefined : (json['hasProcess'] as Array<any>).map(ProcessFromJSON),
        'supportDetails': !exists(json, 'supportDetails') ? undefined : json['supportDetails'],
        'hasVersion': !exists(json, 'hasVersion') ? undefined : (json['hasVersion'] as Array<any>).map(SoftwareVersionFromJSON),
        'hasTypicalDataSource': !exists(json, 'hasTypicalDataSource') ? undefined : json['hasTypicalDataSource'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'referencePublication': !exists(json, 'referencePublication') ? undefined : json['referencePublication'],
        'screenshot': !exists(json, 'screenshot') ? undefined : (json['screenshot'] as Array<any>).map(ImageFromJSON),
        'hasModelCategory': !exists(json, 'hasModelCategory') ? undefined : (json['hasModelCategory'] as Array<any>).map(ModelCategoryFromJSON),
        'hadPrimarySource': !exists(json, 'hadPrimarySource') ? undefined : json['hadPrimarySource'],
        'issueTracker': !exists(json, 'issueTracker') ? undefined : json['issueTracker'],
        'hasSoftwareImage': !exists(json, 'hasSoftwareImage') ? undefined : (json['hasSoftwareImage'] as Array<any>).map(SoftwareImageFromJSON),
        'dateCreated': !exists(json, 'dateCreated') ? undefined : json['dateCreated'],
        'contributor': !exists(json, 'contributor') ? undefined : (json['contributor'] as Array<any>).map(PersonFromJSON),
        'hasInputVariable': !exists(json, 'hasInputVariable') ? undefined : (json['hasInputVariable'] as Array<any>).map(VariablePresentationFromJSON),
        'hasModelResultTable': !exists(json, 'hasModelResultTable') ? undefined : json['hasModelResultTable'],
        'hasPurpose': !exists(json, 'hasPurpose') ? undefined : json['hasPurpose'],
        'hasExecutableInstructions': !exists(json, 'hasExecutableInstructions') ? undefined : json['hasExecutableInstructions'],
        'hasSampleVisualization': !exists(json, 'hasSampleVisualization') ? undefined : (json['hasSampleVisualization'] as Array<any>).map(VisualizationFromJSON),
        'hasCausalDiagram': !exists(json, 'hasCausalDiagram') ? undefined : (json['hasCausalDiagram'] as Array<any>).map(CausalDiagramFromJSON),
        'memoryRequirements': !exists(json, 'memoryRequirements') ? undefined : json['memoryRequirements'],
        'website': !exists(json, 'website') ? undefined : json['website'],
        'citation': !exists(json, 'citation') ? undefined : json['citation'],
        'processorRequirements': !exists(json, 'processorRequirements') ? undefined : json['processorRequirements'],
        'parameterization': !exists(json, 'parameterization') ? undefined : json['parameterization'],
        'hasUsageNotes': !exists(json, 'hasUsageNotes') ? undefined : json['hasUsageNotes'],
        'hasSupportScriptLocation': !exists(json, 'hasSupportScriptLocation') ? undefined : json['hasSupportScriptLocation'],
        'readme': !exists(json, 'readme') ? undefined : json['readme'],
        'label': !exists(json, 'label') ? undefined : json['label'],
        'hasAssumption': !exists(json, 'hasAssumption') ? undefined : json['hasAssumption'],
        'hasParameter': !exists(json, 'hasParameter') ? undefined : (json['hasParameter'] as Array<any>).map(ParameterFromJSON),
        'operatingSystems': !exists(json, 'operatingSystems') ? undefined : json['operatingSystems'],
        'hasExecutableNotebook': !exists(json, 'hasExecutableNotebook') ? undefined : json['hasExecutableNotebook'],
        'hasEquation': !exists(json, 'hasEquation') ? undefined : (json['hasEquation'] as Array<any>).map(EquationFromJSON),
        'usefulForCalculatingIndex': !exists(json, 'usefulForCalculatingIndex') ? undefined : (json['usefulForCalculatingIndex'] as Array<any>).map(NumericalIndexFromJSON),
        'hasInput': !exists(json, 'hasInput') ? undefined : (json['hasInput'] as Array<any>).map(DatasetSpecificationFromJSON),
        'hasOutputVariable': !exists(json, 'hasOutputVariable') ? undefined : (json['hasOutputVariable'] as Array<any>).map(VariablePresentationFromJSON),
    };
}

export function ModelConfigurationToJSON(value?: ModelConfiguration): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'hasDownloadInstructions': value.hasDownloadInstructions,
        'keywords': value.keywords,
        'hasDocumentation': value.hasDocumentation,
        'hasGrid': value.hasGrid === undefined ? undefined : (value.hasGrid as Array<any>).map(GridToJSON),
        'hasImplementationScriptLocation': value.hasImplementationScriptLocation,
        'softwareRequirements': value.softwareRequirements,
        'hasDownloadURL': value.hasDownloadURL,
        'type': value.type,
        'hasInstallationInstructions': value.hasInstallationInstructions,
        'compatibleVisualizationSoftware': value.compatibleVisualizationSoftware === undefined ? undefined : (value.compatibleVisualizationSoftware as Array<any>).map(SoftwareToJSON),
        'copyrightHolder': value.copyrightHolder,
        'hasRegion': value.hasRegion === undefined ? undefined : (value.hasRegion as Array<any>).map(RegionToJSON),
        'hasFAQ': value.hasFAQ,
        'logo': value.logo === undefined ? undefined : (value.logo as Array<any>).map(ImageToJSON),
        'hasContactPerson': value.hasContactPerson,
        'tag': value.tag,
        'id': value.id,
        'limitations': value.limitations,
        'identifier': value.identifier,
        'hasSampleExecution': value.hasSampleExecution === undefined ? undefined : (value.hasSampleExecution as Array<any>).map(SampleExecutionToJSON),
        'hasSampleResult': value.hasSampleResult === undefined ? undefined : (value.hasSampleResult as Array<any>).map(SampleResourceToJSON),
        'author': value.author,
        'hasConstraint': value.hasConstraint === undefined ? undefined : (value.hasConstraint as Array<any>).map(ConstraintToJSON),
        'hasBuildFile': value.hasBuildFile,
        'shortDescription': value.shortDescription,
        'hasExecutionCommand': value.hasExecutionCommand,
        'datePublished': value.datePublished,
        'theoreticalBasis': value.theoreticalBasis,
        'license': value.license,
        'hasSourceCode': value.hasSourceCode === undefined ? undefined : (value.hasSourceCode as Array<any>).map(SourceCodeToJSON),
        'hasSetup': value.hasSetup === undefined ? undefined : (value.hasSetup as Array<any>).map(ConfigurationSetupToJSON),
        'hasExplanationDiagram': value.hasExplanationDiagram === undefined ? undefined : (value.hasExplanationDiagram as Array<any>).map(ImageToJSON),
        'hasExample': value.hasExample,
        'publisher': value.publisher,
        'hasOutput': value.hasOutput === undefined ? undefined : (value.hasOutput as Array<any>).map(DatasetSpecificationToJSON),
        'runtimeEstimation': value.runtimeEstimation,
        'hasOutputTimeInterval': value.hasOutputTimeInterval === undefined ? undefined : (value.hasOutputTimeInterval as Array<any>).map(TimeIntervalToJSON),
        'doi': value.doi,
        'hasFunding': value.hasFunding === undefined ? undefined : (value.hasFunding as Array<any>).map(FundingInformationToJSON),
        'hasComponentLocation': value.hasComponentLocation,
        'hasProcess': value.hasProcess === undefined ? undefined : (value.hasProcess as Array<any>).map(ProcessToJSON),
        'supportDetails': value.supportDetails,
        'hasVersion': value.hasVersion === undefined ? undefined : (value.hasVersion as Array<any>).map(SoftwareVersionToJSON),
        'hasTypicalDataSource': value.hasTypicalDataSource,
        'description': value.description,
        'referencePublication': value.referencePublication,
        'screenshot': value.screenshot === undefined ? undefined : (value.screenshot as Array<any>).map(ImageToJSON),
        'hasModelCategory': value.hasModelCategory === undefined ? undefined : (value.hasModelCategory as Array<any>).map(ModelCategoryToJSON),
        'hadPrimarySource': value.hadPrimarySource,
        'issueTracker': value.issueTracker,
        'hasSoftwareImage': value.hasSoftwareImage === undefined ? undefined : (value.hasSoftwareImage as Array<any>).map(SoftwareImageToJSON),
        'dateCreated': value.dateCreated,
        'contributor': value.contributor === undefined ? undefined : (value.contributor as Array<any>).map(PersonToJSON),
        'hasInputVariable': value.hasInputVariable === undefined ? undefined : (value.hasInputVariable as Array<any>).map(VariablePresentationToJSON),
        'hasModelResultTable': value.hasModelResultTable,
        'hasPurpose': value.hasPurpose,
        'hasExecutableInstructions': value.hasExecutableInstructions,
        'hasSampleVisualization': value.hasSampleVisualization === undefined ? undefined : (value.hasSampleVisualization as Array<any>).map(VisualizationToJSON),
        'hasCausalDiagram': value.hasCausalDiagram === undefined ? undefined : (value.hasCausalDiagram as Array<any>).map(CausalDiagramToJSON),
        'memoryRequirements': value.memoryRequirements,
        'website': value.website,
        'citation': value.citation,
        'processorRequirements': value.processorRequirements,
        'parameterization': value.parameterization,
        'hasUsageNotes': value.hasUsageNotes,
        'hasSupportScriptLocation': value.hasSupportScriptLocation,
        'readme': value.readme,
        'label': value.label,
        'hasAssumption': value.hasAssumption,
        'hasParameter': value.hasParameter === undefined ? undefined : (value.hasParameter as Array<any>).map(ParameterToJSON),
        'operatingSystems': value.operatingSystems,
        'hasExecutableNotebook': value.hasExecutableNotebook,
        'hasEquation': value.hasEquation === undefined ? undefined : (value.hasEquation as Array<any>).map(EquationToJSON),
        'usefulForCalculatingIndex': value.usefulForCalculatingIndex === undefined ? undefined : (value.usefulForCalculatingIndex as Array<any>).map(NumericalIndexToJSON),
        'hasInput': value.hasInput === undefined ? undefined : (value.hasInput as Array<any>).map(DatasetSpecificationToJSON),
        'hasOutputVariable': value.hasOutputVariable === undefined ? undefined : (value.hasOutputVariable as Array<any>).map(VariablePresentationToJSON),
    };
}


