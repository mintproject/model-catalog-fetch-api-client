// tslint:disable
/**
 * Model Catalog
 * This is MINT Model Catalog You can find out more about Model Catalog at [https://w3id.org/mint/modelCatalog/](https://w3id.org/mint/modelCatalog/)
 *
 * The version of the OpenAPI document: v1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Equation,
    EquationFromJSON,
    EquationFromJSONTyped,
    EquationToJSON,
    Grid,
    GridFromJSON,
    GridFromJSONTyped,
    GridToJSON,
} from './';

/**
 * 
 * @export
 * @interface TheoryGuidedModel
 */
export interface TheoryGuidedModel {
    /**
     * 
     * @type {Array<Grid>}
     * @memberof TheoryGuidedModel
     */
    hasGrid?: Array<Grid> | null;
    /**
     * 
     * @type {Array<object>}
     * @memberof TheoryGuidedModel
     */
    hasExplanationDiagram?: Array<object> | null;
    /**
     * 
     * @type {Array<Equation>}
     * @memberof TheoryGuidedModel
     */
    hasEquation?: Array<Equation> | null;
    /**
     * 
     * @type {string}
     * @memberof TheoryGuidedModel
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof TheoryGuidedModel
     */
    label?: string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof TheoryGuidedModel
     */
    type?: Array<string> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof TheoryGuidedModel
     */
    hasModelCategory?: Array<string> | null;
}

export function TheoryGuidedModelFromJSON(json: any): TheoryGuidedModel {
    return TheoryGuidedModelFromJSONTyped(json, false);
}

export function TheoryGuidedModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): TheoryGuidedModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hasGrid': !exists(json, 'hasGrid') ? undefined : (json['hasGrid'] as Array<any>).map(GridFromJSON),
        'hasExplanationDiagram': !exists(json, 'hasExplanationDiagram') ? undefined : json['hasExplanationDiagram'],
        'hasEquation': !exists(json, 'hasEquation') ? undefined : (json['hasEquation'] as Array<any>).map(EquationFromJSON),
        'id': !exists(json, 'id') ? undefined : json['id'],
        'label': !exists(json, 'label') ? undefined : json['label'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'hasModelCategory': !exists(json, 'hasModelCategory') ? undefined : json['hasModelCategory'],
    };
}

export function TheoryGuidedModelToJSON(value?: TheoryGuidedModel): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'hasGrid': value.hasGrid === undefined ? undefined : (value.hasGrid as Array<any>).map(GridToJSON),
        'hasExplanationDiagram': value.hasExplanationDiagram,
        'hasEquation': value.hasEquation === undefined ? undefined : (value.hasEquation as Array<any>).map(EquationToJSON),
        'id': value.id,
        'label': value.label,
        'type': value.type,
        'hasModelCategory': value.hasModelCategory,
    };
}


